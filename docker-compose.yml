version: '3.7'

services:
  haproxy:
    container_name: haproxy
    restart: on-failure
    hostname: rt-loadbalancer
    build:
      context: ${PWD}/haproxy
      dockerfile: ${PWD}/haproxy/Dockerfile
    ports:
      - '80:80'
      - '443:443'
      - '1936:1936'
    networks:
      frontend:
        ipv4_address: 172.20.0.5
    volumes:
      - "${PWD}/haproxy/haproxy.cfg:/etc/haproxy/haproxy.cfg"
    depends_on: 
      - nginx_1
      - nginx_2
  nginx_1:
    container_name: nginx_1
    hostname: rt-nginx-1
    image: nginx:alpine
    networks:
      frontend:
        ipv4_address: 172.20.0.6
    volumes:
      - "${PWD}/nginx/default.conf:/etc/nginx/default.conf"
      - "${PWD}/nginx/index.html:/usr/share/nginx/index.html"

  nginx_2:
    container_name: nginx_2
    hostname: rt-nginx-2.com
    image: nginx:alpine
    networks:
      frontend:
        ipv4_address: 172.20.0.7
    volumes:
      - "${PWD}/nginx/default.conf:/etc/nginx/default.conf"
      - "${PWD}/nginx/index.html:/usr/share/nginx/index.html"

networks:
  frontend:
    ipam:
      config:
        - subnet: 172.20.0.0/24
      
      